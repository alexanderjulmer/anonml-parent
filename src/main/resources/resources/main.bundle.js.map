{"version":3,"sources":["webpack:///./src async","webpack:///./src/app/anonymization-handler.service.ts","webpack:///./src/app/anonymization.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/control.component.css","webpack:///./src/app/control.component.html","webpack:///./src/app/control.component.ts","webpack:///./src/app/focus-main.directive.ts","webpack:///./src/app/focus-rework.directive.ts","webpack:///./src/app/highlight-anonymization.pipe.ts","webpack:///./src/app/http.service.ts","webpack:///./src/app/replacement.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"./src async recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = ./src async recursive\n// module chunks = 1","import {Anonymization} from './anonymization';\nimport {HttpService} from './http.service';\nimport {Injectable} from '@angular/core';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {forEachChild} from 'typescript';\n\n\n@Injectable()\nexport class AnonymizationHandlerService {\n\n  private actuallyReworking: Anonymization;\n  private allLabels: string[];\n  private temporaryAnonymization: Anonymization[] = [];\n\n  protected displayableText: string;\n  protected anonymizations: Anonymization[];\n\n  /**\n   * Resets the loaded document after it is saved and exported to start over with another one.\n   */\n  resetDisplayableText(): void {\n\n    this.anonymizations.length = 0;\n    this.displayableText = '';\n  }\n\n  getText(): string {\n    return this.displayableText;\n  }\n\n  getAnonymizations(): Anonymization[] {\n\n    return this.anonymizations.concat(this.temporaryAnonymization);\n  }\n\n  /**\n   * Finds all of the processed anonymizations which are labeled with the given status.\n   * @param status labeled status to search for\n   * @return list with id's which have the given status\n   */\n  findAnonymizationsByStatus(status: string): number[] {\n\n    const foundAnonymizations: number[] = [];\n    const allAnonymizations: Anonymization[] = this.getAnonymizations();\n\n    for (let i = 0; i < allAnonymizations.length; ++i) {\n      if (allAnonymizations[i].status === status) {\n        foundAnonymizations.push(allAnonymizations[i].id);\n      }\n    }\n\n    return foundAnonymizations;\n  }\n\n  /**\n   * Sets a given anonymization as actually reworking to be able to rework an newly added one.\n   * @param actual given anonymization to set as actuallyReworking\n   */\n  setActualleReworking(actual: Anonymization): void {\n    this.actuallyReworking = actual;\n  }\n\n  getActuallyReworking(): Anonymization {\n    return this.actuallyReworking;\n  }\n\n  getLabels(): string[] {\n    return this.allLabels;\n  }\n\n  /**\n   * Generates a <span> element with different background colors based on the index of the given label\n   * @param label one of the loaded labels (e.g. Person, Organization) which the color bases on\n   * @param original the word(-sequence) which is placed in the <span>\n   * @param asHTML directly sanitize as HTML or not\n   * @return a string or a HTML based on the asHTML parameter\n   */\n  generateColorForLabel(label: string, original: string, asHTML: boolean) {\n    let replacement = '';\n    const indexOfLabel = this.allLabels.indexOf(label)\n    if (indexOfLabel === -1) {\n      replacement += '<span style=\"background-color:rgb( 255 , 255, 255)\">' + original + '</span>'\n    } else {\n      replacement += '<span style=\"background-color:';\n      switch (indexOfLabel) {\n        case 0:\n          replacement += 'rgb(60, 180, 75)';\n          break;\n        case 1:\n          replacement += 'rgb(255, 225, 25)';\n          break;\n        case 2:\n          replacement += 'rgb(0, 130, 200)';\n          break;\n        case 3:\n          replacement += 'rgb(245, 130, 48)';\n          break;\n        case 4:\n          replacement += 'rgb(250, 190, 190)';\n          break;\n        case 5:\n          replacement += 'rgb(230, 190, 255)';\n          break;\n        case 6:\n          replacement += 'rgb(255, 250, 200)';\n          break;\n        case 7:\n          replacement += 'rgb(170, 255, 195)';\n          break;\n        case 8:\n          replacement += 'rgb(128, 128, 0) ';\n          break;\n        case 9:\n          replacement += 'rgb(210, 245, 60)';\n          break;\n        case 10:\n          replacement += 'rgb(0, 128, 128)';\n          break;\n        case 11:\n          replacement += 'rgb(240, 50, 230)';\n          break;\n        default:\n          replacement += 'rgb(255, 215, 180)';\n          break;\n      }\n\n      replacement += '\">' + original + '</span>';\n    }\n    if (asHTML) {\n      return this.sanitizer.bypassSecurityTrustHtml(replacement);\n    }\n    return replacement;\n  }\n\n  setTemporatyAnonymization(): void {\n    this.temporaryAnonymization.length = 0;\n    this.temporaryAnonymization.push(this.actuallyReworking);\n  }\n\n  setUpParams(displayableText: string, anonymizations: Anonymization[]): void {\n    this.displayableText = displayableText;\n    this.anonymizations = anonymizations;\n    this.findNextAnonymization();\n  }\n\n  /**\n   * Finds the maximal id of the anonymizations in the anonymization list\n   * @return the highest id of the anonymizations\n   */\n  getMaxId(): number {\n    let highestIndex = 0;\n    let id;\n    for (let i = 0; i < this.anonymizations.length; ++i) {\n      id = this.anonymizations[i].id;\n      if (id > highestIndex) {\n        highestIndex = id;\n      }\n    }\n    return highestIndex;\n  }\n\n  /**\n   * Finds the anonymization from the anonymizations list which comes next in the displayableText.\n   * Basically looks after the lowest index of the originals with pattern search. This should\n   * help to go from top to bottom through the text. When the lowest is found it is set as\n   * actuallyReworking.\n   */\n  findNextAnonymization(): void {\n    console.log('findNextAnonymization accessed.');\n    let lowestIndex = Number.MAX_VALUE;\n    let foundIndex;\n    let nextAnonymization = -1;\n    for (let i = 0; i < this.anonymizations.length; ++i) {\n      if (this.findAnonymizationsByStatus('DECLINED').concat(this.findAnonymizationsByStatus('ACCEPTED'))\n        .includes(this.anonymizations[i].id)) {\n        continue;\n      }\n      const regex = this.formRegexFromOriginal(this.anonymizations[i].data.original);\n      foundIndex = this.displayableText.search(new RegExp(regex));\n      if (foundIndex === -1) {\n        console.log(this.anonymizations[i].data.original + ' not found!');\n        continue;\n      } else if (foundIndex < lowestIndex) {\n        lowestIndex = foundIndex;\n        nextAnonymization = i;\n      }\n    }\n    if (nextAnonymization === -1) {\n      this.actuallyReworking = null;\n    }\n    this.actuallyReworking = this.anonymizations[nextAnonymization];\n  }\n\n  /**\n   * Escapes all special characters contained in the original, also replaces all \"\\n\" with <br/>\n   * to find it in the displayable text\n   * @param original the original of an anonymization to generate the regex from\n   * @return the formed regex\n   */\n  formRegexFromOriginal(original: string) {\n    original = original.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n    original = original.replace(/\\n/g, '<br/>');\n    return original;\n  }\n\n  /**\n   * Pushes the accepted anonymization to the accepted list and\n   * searches the next one in the text (called if 'a' is pressed)\n   */\n  acceptedActualAnonymization(): void {\n    console.log('Accepted!');\n    if (this.actuallyReworking == null) {\n      console.log('Document finished!');\n      return;\n    }\n    this.actuallyReworking.status = 'ACCEPTED';\n    this.findNextAnonymization();\n  }\n\n  /**\n   * Pushes the declined anonymization to the declined list, removes it from\n   * the anonymization list and searches the next one in the text\n   * (called if 'd' is pressed)\n   */\n  declineActualAnonymization(): void {\n    if (this.actuallyReworking == null) {\n      console.log('Document finished!');\n      return;\n    }\n    const index = this.anonymizations.indexOf(this.actuallyReworking);\n    this.actuallyReworking.status = 'DECLINED';\n    this.findNextAnonymization();\n  }\n\n  /**\n   * Pushes the actual anonymization to the reworked list and searches the next.\n   * (called if 'enter' is pressed after going to the rework zone)\n   */\n  reworkedActualAnonymization(): void {\n    if (this.actuallyReworking == null) {\n      console.log('Document finished!');\n      return;\n    }\n    this.actuallyReworking.status = 'ACCEPTED';\n    this.findNextAnonymization();\n  }\n\n  /**\n   * Adds the newly added anonymization to the anonymization list and searches the next.\n   * (called if 'enter' is pressed after going to the rework zone and\n   * the actually reworking has a id which is the highst + 1)\n   */\n  addedNewAnonymization(): void {\n    this.actuallyReworking.status = 'ACCEPTED';\n    this.anonymizations.push(this.actuallyReworking);\n    this.findNextAnonymization();\n    this.temporaryAnonymization.length = 0;\n  }\n\n  constructor(private httpService: HttpService, private sanitizer: DomSanitizer) {\n    this.httpService.getLabels().then(labels => this.allLabels = labels)\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/anonymization-handler.service.ts","import {Replacement} from './replacement';\n\nexport class Anonymization {\n\n  id: number;\n  data: Replacement;\n  producer: string;\n  status: string;\n\n  constructor() {\n    this.data = new Replacement();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/anonymization.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = 1","module.exports = \"<router-outlet></router-outlet>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = 1","import {Anonymization} from './anonymization';\r\nimport {Component} from '@angular/core';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'AnonML';\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import {BrowserModule} from '@angular/platform-browser';\r\nimport {NgModule} from '@angular/core';\r\nimport {FormsModule} from '@angular/forms';\r\nimport {HttpModule} from '@angular/http';\r\nimport {AppComponent} from './app.component';\r\nimport {HighlightAnonymizationPipe} from './highlight-anonymization.pipe';\r\nimport {FocusReworkDirective} from './focus-rework.directive';\r\nimport {FocusMainDirective} from './focus-main.directive';\r\nimport {RouterModule, Routes} from '@angular/router';\nimport {ControlComponent} from './control.component';\r\n\r\n\r\nconst appRoutes: Routes = [\r\n  {path: '', component: ControlComponent},\r\n  {path: 'document/:id', component: ControlComponent},\r\n  {path: '**', redirectTo: ''}\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HighlightAnonymizationPipe,\r\n    FocusReworkDirective,\r\n    FocusMainDirective,\r\n    ControlComponent\r\n  ],\r\n  imports: [\r\n    RouterModule.forRoot(appRoutes),\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/* Set height of the grid so .sidenav can be 100% (adjust if needed) */\\r\\n.row.content {\\r\\n\\theight: 1500px;\\r\\n}\\r\\n\\r\\n/* Set gray background color and 100% height */\\r\\n.sidenav {\\r\\n\\tbackground-color: #f1f1f1;\\r\\n\\theight: 100%;\\r\\n\\tpadding-left: 5%;\\r\\n\\tpadding-top: 1%;\\r\\n}\\r\\n\\r\\n/* Set black background color, white text and some padding */\\r\\nfooter {\\r\\n\\tbackground-color: #555;\\r\\n\\tcolor: white;\\r\\n\\tpadding: 15px;\\r\\n}\\r\\n\\r\\n/* On small screens, set height to 'auto' for sidenav and grid */\\r\\n@media screen and (max-width: 767px) {\\r\\n\\t.sidenav {\\r\\n\\t\\theight: auto;\\r\\n\\t\\tpadding: 15px;\\r\\n\\t}\\r\\n\\t.row.content {\\r\\n\\t\\theight: auto;\\r\\n\\t}\\r\\n}\\r\\n\\r\\n.btn-sq-lg {\\r\\n  width:65px !important;\\r\\n  height:65px !important;\\r\\n}\\r\\n\\r\\n.btn-sq-sm {\\r\\n  width:32px !important;\\r\\n  height:32px !important;\\r\\n}\\r\\n\\r\\n/* layout.css Style */\\r\\n.upload-drop-zone {\\r\\n  height: 30%;\\r\\n  width: 100%;\\r\\n  border-width: 2px;\\r\\n  margin-bottom: 20px;\\r\\n}\\r\\n\\r\\n/* skin.css Style*/\\r\\n.upload-drop-zone {\\r\\n  color: #ccc;\\r\\n  border-style: dashed;\\r\\n  border-color: #ccc;\\r\\n  line-height: 400px;\\r\\n  text-align: center\\r\\n}\\r\\n.upload-drop-zone.drop {\\r\\n  color: #222;\\r\\n  border-color: #222;\\r\\n}\\r\\n\\r\\n.white {\\r\\n\\tbackground-color: white;\\r\\n\\tpadding-left: 1%;\\r\\n\\t\\r\\n}\\r\\n\\r\\n.fixed-panel {\\r\\n  min-height: 1000px;\\r\\n  max-height: 1000px;\\r\\n  overflow-y: scroll;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/control.component.css\n// module id = ./src/app/control.component.css\n// module chunks = 1","module.exports = \"<div class=\\\"container-fluid\\\">\\n\\t<div class=\\\"row content\\\">\\n\\t\\t<div *ngIf=\\\"!anonymizationHanlderService.displayableText\\\"\\n\\t\\t\\tclass=\\\"col-sm-10 sidenav\\\">\\n\\t\\t\\t<input id=\\\"input-1\\\" type=\\\"file\\\" class=\\\"upload-drop-zone file\\\"\\n\\t\\t\\t\\t(change)=\\\"fileHandle($event)\\\">\\n\\t\\t</div>\\n\\t\\t<div id=\\\"controlId\\\" tabindex=\\\"1\\\" [appFocusRework]=\\\"focusMainArea\\\"\\n\\t\\t\\t(keypress)=\\\"keyControl($event)\\\"\\n\\t\\t\\t*ngIf=\\\"anonymizationHanlderService.displayableText\\\"\\n\\t\\t\\tclass=\\\"col-sm-10 sidenav\\\">\\n\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-secondary\\\">{{fileName}}</button>\\n\\t\\t\\t<div class=\\\"panel panel-default\\\">\\n\\t\\t\\t\\t<div class=\\\"panel-body white fixed-panel\\\"\\n\\t\\t\\t\\t\\t(mouseup)=\\\"getSelectionText()\\\">\\n\\t\\t\\t\\t\\t<!-- *ngFor=\\\"let page of anonymizationHanlderService.displayableText\\\"-->\\n\\t\\t\\t\\t\\t<div\\n\\t\\t\\t\\t\\t\\t[innerHtml]=\\\"anonymizationHanlderService.displayableText | highlightAnonymization:anonymizationHanlderService.getAnonymizations():trigger\\\"></div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<span>{{selectedText}}</span>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"col-sm-2\\\">\\n\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t<div class=\\\"col-sm-5\\\">\\n\\t\\t\\t\\t\\t<h4>Steuerung:</h4>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"col-sm-1\\\"></div>\\n\\t\\t\\t\\t<div class=\\\"col-sm-5\\\">\\n\\t\\t\\t\\t\\t<table>\\n\\t\\t\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t\\t\\t<td></td>\\n\\t\\t\\t\\t\\t\\t\\t<td><button type=\\\"button\\\" class=\\\"btn btn-sq-sm btn-default\\\">w</button></td>\\n\\t\\t\\t\\t\\t\\t\\t<td></td>\\n\\n\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t\\t\\t<td><button type=\\\"button\\\" class=\\\"btn btn-sq-sm btn-default\\\">a</button></td>\\n\\t\\t\\t\\t\\t\\t\\t<td><button type=\\\"button\\\" class=\\\"btn btn-sq-sm btn-default\\\">s</button></td>\\n\\t\\t\\t\\t\\t\\t\\t<td><button type=\\\"button\\\" class=\\\"btn btn-sq-sm btn-default\\\">d</button></td>\\n\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t</table>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t<div class=\\\"col-md-8 col-md-offset-2\\\">\\n\\t\\t\\t\\t\\t<table>\\n\\t\\t\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t\\t\\t<td><button type=\\\"button\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"btn btn-sq-lg btn-default btn-lg\\\">a</button></td>\\n\\t\\t\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t\\t\\t<h4>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t:&nbsp;<b>a</b>ccept\\n\\t\\t\\t\\t\\t\\t\\t\\t</h4>\\n\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t\\t\\t<td><button type=\\\"button\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"btn btn-sq-lg btn-default btn-lg\\\">d</button></td>\\n\\t\\t\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t\\t\\t<h4>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t:&nbsp;<b>d</b>ecline\\n\\t\\t\\t\\t\\t\\t\\t\\t</h4>\\n\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t\\t\\t<td><button type=\\\"button\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"btn btn-sq-lg btn-default btn-lg\\\">w</button></td>\\n\\t\\t\\t\\t\\t\\t\\t<td><h4>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t:&nbsp;re<b>w</b>ork\\n\\t\\t\\t\\t\\t\\t\\t\\t</h4></td>\\n\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t\\t\\t<td><button type=\\\"button\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"btn btn-sq-lg btn-default btn-lg\\\">s</button></td>\\n\\t\\t\\t\\t\\t\\t\\t<td><h4>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t:&nbsp;<b>s</b>ave\\n\\t\\t\\t\\t\\t\\t\\t\\t</h4></td>\\n\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t</table>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<hr>\\n\\t\\t\\t<div *ngIf=\\\"anonymizationHanlderService.getActuallyReworking()\\\"\\n\\t\\t\\t\\t(keyup.enter)=\\\"enterRework()\\\">\\n\\t\\t\\t\\t<table>\\n\\t\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t\\t<td><h4>Annotation:</h4></td>\\n\\t\\t\\t\\t\\t</tr>\\n\\n\\t\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t\\t<td><div\\n\\t\\t\\t\\t\\t\\t\\t\\t[innerHtml]=\\\"anonymizationHanlderService.generateColorForLabel(\\n\\t\\t\\t\\t\\t\\t\\t\\tanonymizationHanlderService.getActuallyReworking().data.label, \\n\\t\\t\\t\\t\\t\\t\\t\\tanonymizationHanlderService.getActuallyReworking().data.original, \\n\\t\\t\\t\\t\\t\\t\\t\\ttrue)\\\"></div></td>\\n\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t\\t<td><h3>Label:</h3></td>\\n\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t\\t<td><select [appFocusRework]=\\\"focusReworkArea\\\"\\n\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"anonymizationHanlderService.getActuallyReworking().data.label\\\"\\n\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\"><option\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t*ngFor=\\\"let label of anonymizationHanlderService.getLabels()\\\">{{label}}</option>\\n\\t\\t\\t\\t\\t\\t</select></td>\\n\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t\\t<td><h3>Ersetzung:</h3></td>\\n\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t\\t<td><input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"ersetzung\\\"\\n\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"anonymizationHanlderService.getActuallyReworking().data.replacement\\\"></td>\\n\\t\\t\\t\\t\\t</tr>\\n\\n\\n\\t\\t\\t\\t</table>\\n\\n\\t\\t\\t\\t<a>Just hit 'Enter' to accept the changes!</a>\\n\\n\\t\\t\\t\\t<hr>\\n\\t\\t\\t\\t<h4>Farblegende:</h4>\\n\\t\\t\\t\\t<ul>\\n\\t\\t\\t\\t\\t<li *ngFor=\\\"let label of anonymizationHanlderService.getLabels()\\\">\\n\\t\\t\\t\\t\\t\\t<div\\n\\t\\t\\t\\t\\t\\t\\t[innerHtml]=\\\"anonymizationHanlderService.generateColorForLabel(label,label,true)\\\"></div>\\n\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t</ul>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/control.component.html\n// module id = ./src/app/control.component.html\n// module chunks = 1","import {Anonymization} from './anonymization';\nimport {AnonymizationHandlerService} from './anonymization-handler.service';\nimport {Component, Input, ViewChildren, ViewChild, EventEmitter} from '@angular/core';\nimport {FileReference} from 'typescript';\nimport {HttpService} from './http.service';\nimport {Document} from './document';\nimport {HttpModule} from '@angular/http';\nimport {ActivatedRoute} from '@angular/router';\n\n@Component({\n  selector: 'app-control',\n  templateUrl: './control.component.html',\n  styleUrls: ['./control.component.css'],\n  providers: [HttpService, AnonymizationHandlerService]\n})\nexport class ControlComponent {\n\n  private param: string;\n  protected trigger = 0;\n  protected fileName: string;\n  protected docId: string;\n  protected docFileType: string;\n\n  protected focusReworkArea = new EventEmitter<boolean>();\n  protected focusMainArea = new EventEmitter<boolean>();\n  protected selectedText;\n  protected tempAnonymization;\n\n\n  constructor(private httpService: HttpService, protected anonymizationHanlderService: AnonymizationHandlerService,\n    private activatedRoute: ActivatedRoute) {\n    activatedRoute.params.subscribe(param => this.param = param.id);\n    console.log(this.param);\n    if (this.param === undefined || this.param === '') {\n      console.log('no param found.')\n    } else {\n      this.httpService.getDocument(this.param).then(response =>\n        this.setUpFromDocument(response)\n      );\n    }\n    this.focusMainArea.emit(true);\n  }\n\n  updatePipe(): void {\n    this.trigger++;\n  }\n\n  /**\n   * Uploads the file to the backend and sets up the needed elements from the response\n   * @param event contains the uploaded files\n   */\n  fileHandle(event): void {\n    const files = event.target.files || event.srcElement.files;\n    console.log(files);\n\n    this.httpService.postFile(files).then(response =>\n      this.setUpFromDocument(response)\n    );\n  }\n\n  setUpFromDocument(document: Document): void {\n    this.fileName = document.fileName;\n    this.docId = document.id;\n    this.docFileType = document.originalFileType;\n    for (let i = 0; i < document.anonymizations.length; ++i) {\n      document.anonymizations[i].id = i + 1;\n    }\n    this.anonymizationHanlderService.setUpParams(document.displayableText, document.anonymizations);\n\n  }\n\n  /**\n   * Handles the operations on keypress (like a for accept)\n   * @param event the catched keyboard event to check which key is pressed\n   */\n  keyControl(event: KeyboardEvent): void {\n    switch (event.charCode) {\n      case 97:\n        console.log('pressed a');\n        this.anonymizationHanlderService.acceptedActualAnonymization();\n        this.updatePipe();\n        this.httpService.saveFile(this.anonymizationHanlderService.getAnonymizations(), this.docId);\n        break;\n      case 119:\n        console.log('pressed w');\n        this.focusReworkArea.emit(true);\n\n        break;\n      case 100:\n        console.log('pressed d');\n        this.anonymizationHanlderService.declineActualAnonymization();\n        this.updatePipe();\n        this.httpService.saveFile(this.anonymizationHanlderService.getAnonymizations(), this.docId);\n        break;\n      case 115:\n        console.log('pressed s');\n        if (this.anonymizationHanlderService.getActuallyReworking() === undefined) {\n          if (window.confirm('Wirklich fertig?')) {\n            this.httpService.exportFile(this.docId);\n            this.anonymizationHanlderService.resetDisplayableText();\n          }\n\n        } else {\n          window.alert('Es sind noch offene Anonymisierungen vorhanden!')\n          console.log('Document not finished!');\n        }\n\n\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Sets the focus back to the main area if 'enter' was pressed in the rework area.\n   * In addition calls the necessary handler function for the reworked or added anonymization.\n   */\n  enterRework(): void {\n    console.log('Hit Enter!');\n    this.focusMainArea.emit(true);\n    if (this.anonymizationHanlderService.getActuallyReworking().id === (this.anonymizationHanlderService.getMaxId() + 1)) {\n      console.log('add new anonymization!');\n      this.anonymizationHanlderService.addedNewAnonymization();\n    } else {\n      this.anonymizationHanlderService.reworkedActualAnonymization();\n    }\n\n    this.updatePipe();\n    this.httpService.saveFile(this.anonymizationHanlderService.getAnonymizations(), this.docId);\n  }\n\n  /**\n   * Sets up a new anonymization with HUMAN as producer if something of the text\n   * is selected.\n   */\n  getSelectionText(): void {\n    console.log('getSelectionText Entered.');\n    let selectedText;\n    if (window.getSelection) {\n      selectedText = window.getSelection();\n    } else if (document.getSelection) {\n      selectedText = document.getSelection();\n    }\n    // first check for wrong selections\n    if (String(selectedText) === '' || String(selectedText) === ' ') {\n      return;\n    }\n    this.tempAnonymization = new Anonymization();\n    this.tempAnonymization.data.original = selectedText.toString();\n    this.tempAnonymization.data.label = 'UNKNOWN';\n    this.tempAnonymization.data.replacement = '';\n    this.tempAnonymization.producer = 'HUMAN';\n    this.tempAnonymization.status = 'PROCESSING';\n    this.tempAnonymization.id = this.anonymizationHanlderService.getMaxId() + 1;\n\n    this.anonymizationHanlderService.setActualleReworking(this.tempAnonymization);\n    this.anonymizationHanlderService.setTemporatyAnonymization();\n    this.updatePipe();\n    this.focusReworkArea.emit(true);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/control.component.ts","import { Directive, Input, EventEmitter, Inject, ElementRef, Renderer, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[appFocusMain]'\n})\nexport class FocusMainDirective implements OnInit {\n\n  @Input() appFocusMain: EventEmitter<boolean>;\n\n  constructor( @Inject(ElementRef) private element: ElementRef, private renderer: Renderer) { }\n\n  ngOnInit() {\n    this.appFocusMain.subscribe(event => {\n      this.renderer.invokeElementMethod(this.element.nativeElement, 'focus', []);\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/focus-main.directive.ts","import { Directive, Input, EventEmitter, Inject, ElementRef, Renderer, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[appFocusRework]'\n})\nexport class FocusReworkDirective implements OnInit {\n\n  @Input() appFocusRework: EventEmitter<boolean>;\n\n  constructor( @Inject(ElementRef) private element: ElementRef, private renderer: Renderer) { }\n\n  ngOnInit() {\n    this.appFocusRework.subscribe(event => {\n      this.renderer.invokeElementMethod(this.element.nativeElement, 'focus', []);\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/focus-rework.directive.ts","import {Anonymization} from './anonymization';\r\nimport {AnonymizationHandlerService} from './anonymization-handler.service';\r\nimport {AppComponent} from './app.component';\r\nimport {Pipe, PipeTransform} from '@angular/core';\r\nimport {DomSanitizer, SafeHtml} from '@angular/platform-browser';\r\nimport {textChangeRangeIsUnchanged} from 'typescript';\r\n\r\n@Pipe({\r\n  name: 'highlightAnonymization'\r\n})\r\nexport class HighlightAnonymizationPipe implements PipeTransform {\r\n\r\n  /**\r\n   * Finds the originals of the anonymizations from the list (with regex) and replaces them in the\r\n   * displayable text by a <span> element to set a background color according to the Label of the\r\n   * anonymization. If the anonymization is the next one then there\r\n   * are added red marks before and after to mark the actually looked at.\r\n   *\r\n   * @param value is the text which is actually piped in the view\r\n   * @param anonymizations is the list of anonymizations which should be highlighted\r\n   * @param trigger a number which is incremented to trigger the pipe function\r\n   * @return html with the originals replaced by the <span> object to highlight it\r\n   */\r\n  transform(value: string, anonymizations: Anonymization[], trigger: number): SafeHtml {\r\n    console.log('Pipe highlightAnonymization entered.');\r\n    let newValue = value;\r\n    let replacement = '';\r\n\r\n    for (let i = 0; i < anonymizations.length; ++i) {\r\n      replacement = '';\r\n\r\n      if (this.anonymizationHanlderService.findAnonymizationsByStatus('ACCEPTED').includes(anonymizations[i].id)) {\r\n        replacement = '<span style=\"background-color:DarkGrey\">' + anonymizations[i].data.replacement + '</span>'\r\n\r\n      } else if (this.anonymizationHanlderService.findAnonymizationsByStatus('DECLINED').includes(anonymizations[i].id)) {\r\n        replacement = '<span style=\"background-color:rgb(242, 250, 255)\">' + anonymizations[i].data.original + '</span>'\r\n\r\n      } else {\r\n\r\n        if (anonymizations[i].id === this.anonymizationHanlderService.getActuallyReworking().id) {\r\n          replacement = '<span style=\"background-color:rgb(255,0,0)\">O</span>';\r\n        }\r\n\r\n        replacement += this.anonymizationHanlderService.generateColorForLabel(anonymizations[i].data.label,\r\n          anonymizations[i].data.original.replace(/\\n/g, '<br/>'), false);\r\n\r\n        if (anonymizations[i].id === this.anonymizationHanlderService.getActuallyReworking().id) {\r\n          replacement += '<span style=\"background-color:rgb(255,0,0)\">O</span>';\r\n        }\r\n      }\r\n      newValue = newValue.replace(new RegExp(\r\n        this.anonymizationHanlderService.formRegexFromOriginal(anonymizations[i].data.original), 'g'), replacement);\r\n    }\r\n    return this.sanitizer.bypassSecurityTrustHtml(newValue);\r\n  }\r\n\r\n\r\n  constructor(private anonymizationHanlderService: AnonymizationHandlerService, private sanitizer: DomSanitizer) {}\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/highlight-anonymization.pipe.ts","import {Anonymization} from './anonymization';\r\nimport {Injectable} from '@angular/core';\r\nimport {Http, Headers, RequestOptions, RequestOptionsArgs} from '@angular/http';\r\nimport {Observable, } from 'rxjs/Rx';\r\nimport 'rxjs/add/operator/toPromise';\r\nimport {Document} from './document';\r\n\r\n@Injectable()\r\nexport class HttpService {\r\n\r\n  private exportAccessed = false;\r\n  private lockedExport = false;\r\n  private headers = new Headers({});\r\n  options: RequestOptionsArgs = new RequestOptions();\r\n\r\n  constructor(private http: Http) {}\r\n\r\n  /**\r\n   * Loads all labels from the backend to have the actual ones\r\n   * @return Promise<string[]> a promise containing a list of strings (label names)\r\n   */\r\n  getLabels(): Promise<string[]> {\r\n    const url = '/api/labels';\r\n    return this.http.get(url).toPromise().then(response => response.json() as String[]).catch(this.handleError);\r\n  }\r\n\r\n  /**\r\n * Loads all labels from the backend to have the actual ones\r\n * @return Promise<string[]> a promise containing a list of strings (label names)\r\n */\r\n  getDocument(id: string): Promise<Document> {\r\n    const url = '/api/document/' + id;\r\n    return this.http.get(url).toPromise().then(response => response.json() as Document).catch(this.handleError);\r\n  }\r\n\r\n  /**\r\n   * Sends the uploaded file as formData and get back the processed file as document object to display it\r\n   * @param files the actually uploaded file/s\r\n   * @return Promise<Document> a promise containing the processed file as Document object\r\n   */\r\n  postFile(files): Promise<Document> {\r\n    const url = '/api/upload';\r\n    const formData: FormData = new FormData();\r\n    this.options.headers = new Headers();\r\n\r\n    for (let i = 0; i < files.length; i++) {\r\n      formData.append('file', files[i]);\r\n    }\r\n\r\n    return this.http.post(url, formData, this.options)\r\n      .toPromise().then(response => response.json() as Document)\r\n      .catch(this.handleError);\r\n\r\n  }\r\n\r\n  /**\r\n   * Sends the manually reworked anonymizations to the backend to update the document.\r\n   * Additionally calls the api path for the export of the anonymized document.\r\n   * @param anonymizations a list of updated and added anonymizations\r\n   * @param id of the document in progress\r\n   */\r\n  saveFile(anonymizations: Anonymization[], id: string): void {\r\n    this.lockedExport = true;\r\n    const url = '/api/update/anonymizations/' + id;\r\n    const headers = new Headers();\r\n\r\n\r\n    headers.append('Content-Type', 'application/json');\r\n    this.http.post(url, JSON.stringify(anonymizations), {headers: headers})\r\n      .toPromise().then(Response => {\r\n        this.lockedExport = false;\r\n        if (this.exportAccessed) {\r\n          this.exportFile(id);\r\n\r\n        }\r\n      })\r\n      .catch(this.handleError);\r\n\r\n\r\n  }\r\n\r\n  exportFile(id: string): void {\r\n    if (this.lockedExport) {\r\n      this.exportAccessed = true;\r\n      return;\r\n    }\r\n    window.location.replace('api/save/' + id)\r\n    this.exportAccessed = false;\r\n  }\r\n\r\n  private handleError(error: any): Promise<any> {\r\n    console.error('An error occurred', error); // for demo purposes only\r\n    return Promise.reject(error.message || error);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/http.service.ts","export class Replacement {\n  original: string;\n  replacement: string;\n  label: string;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/replacement.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":""}